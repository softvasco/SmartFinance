@page "/moneyaccounts"
@inject HttpClient Http
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

@rendermode @(new InteractiveServerRenderMode(prerender:false))

<PageTitle>Smart Finance - Money Accounts</PageTitle>

<br />
<br />
<h2>Money accounts</h2>
<br />

@if (moneyAccounts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <button class="btn btn-primary" @onclick="AddMoneyAccount">Add</button>
    <br />
    <br />
    <table class="table" style="border: 1px solid #000; padding: 10px;">
        <thead>
            <tr>
                <th>Description</th>
                <th>Operation Date</th>
                <th>Amount</th>
                <th>State</th>
                <th>Source</th>
                <th>Destination</th>
                <th>Attachment</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
    <button class="btn btn-primary" @onclick="AddMoneyAccount">Add</button>
}

@code {
    private List<MoneyAccountDto> moneyAccounts;

    void AddMoneyAccount()
    {
        // Redirect to another page upon successful processing
        NavigationManager.NavigateTo("/add-moneyaccount");
    }

    protected override async Task OnInitializedAsync()
    {
        moneyAccounts = await Http.GetFromJsonAsync<List<MoneyAccountDto>>("api/MoneyAccounts");
    }

}